name: CD

on:
  push:
    branches: ["master"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # Image name MUST have a pattern like <org_name_lowercase>/<repo_name_lowercase>
  IMAGE_TAG: latest

permissions:
  packages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository

      - name: Set up env file
        run: |
          echo VITE_BACKEND_URL=${{ vars.BACKEND_URL }} >> .env.production

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.IMAGE_TAG }}

  # deploy:
  #   name: Deploy
  #   if: false # Temporarily disable deploy step
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - name: Deploy
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         port: ${{ secrets.VPS_PORT }}
  #         username: ${{ secrets.VPS_USERNAME }}
  #         password: ${{ secrets.VPS_PASSWORD }}

  #         script: |
  #           export CR_PAT=${{ secrets.GITHUB_TOKEN }}
  #           echo $CR_PAT | docker login ${{ env.REGISTRY }} -u ${{ env.ORG_USERNAME }} --password-stdin
  #           docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  #           docker rm -f vite-template
  #           docker run --name vite-template -p 3000:3000 --restart always -d ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
  #           docker logout ${{ env.REGISTRY }}
            
